$date
	Wed Feb 02 10:28:50 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 & ZERO $end
$var wire 3 ' WRITEREG [2:0] $end
$var wire 1 ( WRITEENABLE $end
$var wire 8 ) VALUE2 [7:0] $end
$var wire 8 * REGOUT2COMPLIMENT [7:0] $end
$var wire 8 + REGOUT2 [7:0] $end
$var wire 8 , REGOUT1 [7:0] $end
$var wire 3 - READREG2 [2:0] $end
$var wire 3 . READREG1 [2:0] $end
$var wire 32 / PCOUT [31:0] $end
$var wire 32 0 PCNEXT [31:0] $end
$var wire 32 1 PCBRANCH [31:0] $end
$var wire 8 2 OPERAND2 [7:0] $end
$var wire 8 3 OPCODE [7:0] $end
$var wire 8 4 OFFSET [7:0] $end
$var wire 1 5 MUXREGOUT2 $end
$var wire 1 6 MUXJUMP $end
$var wire 1 7 MUXIMMEDIATE $end
$var wire 1 8 MUXBEQ $end
$var wire 8 9 IMMEDIATE [7:0] $end
$var wire 8 : ALURESULT [7:0] $end
$var wire 3 ; ALUOP [2:0] $end
$var reg 32 < PC [31:0] $end
$scope module ValueOPERAND2 $end
$var wire 8 = IMMEDIATE [7:0] $end
$var wire 8 > VALUE2 [7:0] $end
$var wire 1 7 MUXIMMEDIATE $end
$var reg 8 ? OPERAND2 [7:0] $end
$upscope $end
$scope module alu_result $end
$var wire 8 @ DATA2 [7:0] $end
$var wire 1 & ZERO $end
$var wire 3 A SELECT [2:0] $end
$var wire 8 B RESULT [7:0] $end
$var wire 8 C OR_OUT [7:0] $end
$var wire 8 D FORWARD_OUT [7:0] $end
$var wire 8 E DATA1 [7:0] $end
$var wire 8 F AND_OUT [7:0] $end
$var wire 8 G ADD_OUT [7:0] $end
$scope module ZERO_MUX_result $end
$var wire 8 H ADD_OUT [7:0] $end
$var reg 1 & ZERO $end
$upscope $end
$scope module add_result $end
$var wire 8 I DATA2 [7:0] $end
$var wire 8 J DATA1 [7:0] $end
$var wire 8 K ADD_OUT [7:0] $end
$upscope $end
$scope module and_result $end
$var wire 8 L AND_OUT [7:0] $end
$var wire 8 M DATA2 [7:0] $end
$var wire 8 N DATA1 [7:0] $end
$upscope $end
$scope module forward_result $end
$var wire 8 O DATA2 [7:0] $end
$var wire 8 P FORWARD_OUT [7:0] $end
$upscope $end
$scope module mux_result $end
$var wire 8 Q ADD_OUT [7:0] $end
$var wire 8 R AND_OUT [7:0] $end
$var wire 8 S FORWARD_OUT [7:0] $end
$var wire 3 T SELECT [2:0] $end
$var wire 8 U OR_OUT [7:0] $end
$var reg 8 V RESULT [7:0] $end
$upscope $end
$scope module or_result $end
$var wire 8 W DATA2 [7:0] $end
$var wire 8 X OR_OUT [7:0] $end
$var wire 8 Y DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module compliment_operation $end
$var wire 8 Z REGOUT2 [7:0] $end
$var reg 8 [ REGOUT2COMPLIMENT [7:0] $end
$upscope $end
$scope module control_signals $end
$var wire 8 \ OPCODE [7:0] $end
$var reg 3 ] ALUOP [2:0] $end
$var reg 1 8 MUXBEQ $end
$var reg 1 7 MUXIMMEDIATE $end
$var reg 1 6 MUXJUMP $end
$var reg 1 5 MUXREGOUT2 $end
$var reg 1 ( WRITEENABLE $end
$upscope $end
$scope module pc_adder $end
$var wire 32 ^ PC [31:0] $end
$var wire 32 _ PCOUT [31:0] $end
$upscope $end
$scope module pc_final $end
$var wire 1 8 MUXBEQ $end
$var wire 1 6 MUXJUMP $end
$var wire 32 ` PCOUT [31:0] $end
$var wire 1 & ZERO $end
$var wire 32 a PCBRANCH [31:0] $end
$var reg 32 b PCNEXT [31:0] $end
$upscope $end
$scope module pc_jump_branch $end
$var wire 3 c ALUOP [2:0] $end
$var wire 8 d OFFSET [7:0] $end
$var wire 32 e PCOUT [31:0] $end
$var reg 32 f OFFSET_EXTENDED [31:0] $end
$var reg 32 g PCBRANCH [31:0] $end
$upscope $end
$scope module register_operation $end
$var wire 1 # CLK $end
$var wire 8 h IN [7:0] $end
$var wire 3 i INADDRESS [2:0] $end
$var wire 3 j OUT1ADDRESS [2:0] $end
$var wire 3 k OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ( WRITE $end
$var reg 8 l OUT1 [7:0] $end
$var reg 8 m OUT2 [7:0] $end
$upscope $end
$scope module sub_or_not $end
$var wire 1 5 MUXREGOUT2 $end
$var wire 8 n REGOUT2 [7:0] $end
$var wire 8 o REGOUT2COMPLIMENT [7:0] $end
$var reg 8 p VALUE2 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
b11111111111111111111111111111100 ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
b11111111111111111111111111111100 <
bx ;
bx :
bx 9
x8
x7
x6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
bx '
x&
bx %
0$
0#
bx "
b11111111111111111111111111111100 !
$end
#1
b0 0
b0 b
b0 /
b0 _
b0 `
b0 e
#4
1#
#5
b0 !
b0 <
b0 ^
#6
b100 0
b100 b
b100 /
b100 _
b100 `
b100 e
#7
b101 2
b101 ?
b101 @
b101 I
b101 M
b101 O
b101 W
b10000 f
b0 3
b0 \
b0 .
b0 j
b101 -
b101 k
b101 9
b101 =
b100 '
b100 i
b100 4
b100 d
b1000000000000000101 "
b1000000000000000101 %
#8
b101 :
b101 B
b101 V
b101 h
b0x0x F
b0x0x L
b0x0x R
bx1x1 C
bx1x1 U
bx1x1 X
06
08
1(
15
17
b0 ;
b0 A
b0 T
b0 ]
b0 c
b101 D
b101 P
b101 S
0#
#9
b10100 1
b10100 a
b10100 g
#12
1#
#13
b100 !
b100 <
b100 ^
#14
b1000 0
b1000 b
b1000 /
b1000 _
b1000 `
b1000 e
#15
b1100 f
b11 '
b11 i
b11 4
b11 d
b110000000000000101 "
b110000000000000101 %
#16
0#
#20
1#
#21
b1000 !
b1000 <
b1000 ^
#22
b1100 0
b1100 b
b1100 /
b1100 _
b1100 `
b1100 e
#23
b11 2
b11 ?
b11 @
b11 I
b11 M
b11 O
b11 W
b1000 f
b111 3
b111 \
b100 .
b100 j
b11 -
b11 k
b11 9
b11 =
b10 '
b10 i
b10 4
b10 d
b111000000100000010000000011 "
b111000000100000010000000011 %
#24
bx 2
bx ?
bx @
bx I
bx M
bx O
bx W
bx :
bx B
bx V
bx h
b0xx F
b0xx L
b0xx R
bx11 C
bx11 U
bx11 X
18
0(
05
07
b1 ;
b1 A
b1 T
b1 ]
b1 c
b11 D
b11 P
b11 S
0#
#25
bx F
bx L
bx R
bx C
bx U
bx X
bx D
bx P
bx S
b101 +
b101 Z
b101 m
b101 n
b101 ,
b101 E
b101 J
b101 N
b101 Y
b101 l
#26
b11111011 2
b11111011 ?
b11111011 @
b11111011 I
b11111011 M
b11111011 O
b11111011 W
b11111011 )
b11111011 >
b11111011 p
b11111011 *
b11111011 [
b11111011 o
bx1x1 C
bx1x1 U
bx1x1 X
b0x0x F
b0x0x L
b0x0x R
#27
b1 F
b1 L
b1 R
b11111111 C
b11111111 U
b11111111 X
b11111011 D
b11111011 P
b11111011 S
#28
b10100 0
b10100 b
1&
b0 :
b0 B
b0 V
b0 h
b0 G
b0 H
b0 K
b0 Q
1#
#29
b10100 !
b10100 <
b10100 ^
#30
b11000 /
b11000 _
b11000 `
b11000 e
#31
b11100 f
b10 3
b10 \
b111 '
b111 i
b111 4
b111 d
b10000001110000010000000011 "
b10000001110000010000000011 %
#32
b101 2
b101 ?
b101 @
b101 I
b101 M
b101 O
b101 W
b11000 0
b11000 b
b101 )
b101 >
b101 p
08
1(
15
0#
#33
b101 F
b101 L
b101 R
b101 C
b101 U
b101 X
b101 D
b101 P
b101 S
b110100 1
b110100 a
b110100 g
#34
0&
b1010 :
b1010 B
b1010 V
b1010 h
b1010 G
b1010 H
b1010 K
b1010 Q
#36
1#
#37
b11000 !
b11000 <
b11000 ^
#38
b11100 0
b11100 b
b11100 /
b11100 _
b11100 `
b11100 e
#39
b1000 f
b110 3
b110 \
b0 .
b0 j
b0 -
b0 k
b0 9
b0 =
b10 '
b10 i
b10 4
b10 d
b110000000100000000000000000 "
b110000000100000000000000000 %
#40
b110100 0
b110100 b
b101 :
b101 B
b101 V
b101 h
16
0(
b11 ;
b11 A
b11 T
b11 ]
b11 c
0#
#41
bx 2
bx ?
bx @
bx I
bx M
bx O
bx W
bx )
bx >
bx p
b100100 0
b100100 b
bx +
bx Z
bx m
bx n
bx ,
bx E
bx J
bx N
bx Y
bx l
b100100 1
b100100 a
b100100 g
#42
bx :
bx B
bx V
bx h
bx D
bx P
bx S
bx *
bx [
bx o
bx C
bx U
bx X
bx F
bx L
bx R
#43
bx G
bx H
bx K
bx Q
#44
1#
#45
b100100 !
b100100 <
b100100 ^
#46
b101000 /
b101000 _
b101000 `
b101000 e
#47
b11000 f
b101 3
b101 \
b100 .
b100 j
b111 -
b111 k
b111 9
b111 =
b110 '
b110 i
b110 4
b110 d
b101000001100000010000000111 "
b101000001100000010000000111 %
#48
b101000 0
b101000 b
06
1(
0#
#49
b1010 2
b1010 ?
b1010 @
b1010 I
b1010 M
b1010 O
b1010 W
b1010 )
b1010 >
b1010 p
b1010 +
b1010 Z
b1010 m
b1010 n
b101 ,
b101 E
b101 J
b101 N
b101 Y
b101 l
b1000000 1
b1000000 a
b1000000 g
#50
b1111 :
b1111 B
b1111 V
b1111 h
b1010 D
b1010 P
b1010 S
b11110110 *
b11110110 [
b11110110 o
b1111 C
b1111 U
b1111 X
b0 F
b0 L
b0 R
#51
b1111 G
b1111 H
b1111 K
b1111 Q
#52
1#
#53
b101000 !
b101000 <
b101000 ^
#54
b101100 0
b101100 b
b101100 /
b101100 _
b101100 `
b101100 e
#55
bx f
bx 3
bx \
bx .
bx j
bx -
bx k
bx 9
bx =
bx '
bx i
bx 4
bx d
bx "
bx %
#56
0(
0#
#57
bx 2
bx ?
bx @
bx I
bx M
bx O
bx W
bx )
bx >
bx p
bx +
bx Z
bx m
bx n
bx ,
bx E
bx J
bx N
bx Y
bx l
bx 1
bx a
bx g
#58
bx :
bx B
bx V
bx h
bx D
bx P
bx S
bx *
bx [
bx o
bx C
bx U
bx X
bx F
bx L
bx R
#59
bx G
bx H
bx K
bx Q
#60
1#
#61
b101100 !
b101100 <
b101100 ^
#62
b110000 0
b110000 b
b110000 /
b110000 _
b110000 `
b110000 e
#64
0#
#68
1#
#69
b110000 !
b110000 <
b110000 ^
#70
b110100 0
b110100 b
b110100 /
b110100 _
b110100 `
b110100 e
#72
0#
#76
1#
#77
b110100 !
b110100 <
b110100 ^
#78
b111000 0
b111000 b
b111000 /
b111000 _
b111000 `
b111000 e
#80
0#
#84
1#
#85
b111000 !
b111000 <
b111000 ^
#86
b111100 0
b111100 b
b111100 /
b111100 _
b111100 `
b111100 e
#88
0#
#92
1#
#93
b111100 !
b111100 <
b111100 ^
#94
b1000000 0
b1000000 b
b1000000 /
b1000000 _
b1000000 `
b1000000 e
#96
0#
#100
1#
#101
b1000000 !
b1000000 <
b1000000 ^
#102
b1000100 0
b1000100 b
b1000100 /
b1000100 _
b1000100 `
b1000100 e
#104
0#
#108
1#
#109
b1000100 !
b1000100 <
b1000100 ^
#110
b1001000 0
b1001000 b
b1001000 /
b1001000 _
b1001000 `
b1001000 e
#112
0#
#116
1#
#117
b1001000 !
b1001000 <
b1001000 ^
#118
b1001100 0
b1001100 b
b1001100 /
b1001100 _
b1001100 `
b1001100 e
#120
0#
#124
1#
#125
b1001100 !
b1001100 <
b1001100 ^
#126
b1010000 0
b1010000 b
b1010000 /
b1010000 _
b1010000 `
b1010000 e
#128
0#
#132
1#
#133
b1010000 !
b1010000 <
b1010000 ^
#134
b1010100 0
b1010100 b
b1010100 /
b1010100 _
b1010100 `
b1010100 e
#136
0#
#140
1#
#141
b1010100 !
b1010100 <
b1010100 ^
#142
b1011000 0
b1011000 b
b1011000 /
b1011000 _
b1011000 `
b1011000 e
#144
0#
#148
1#
#149
b1011000 !
b1011000 <
b1011000 ^
#150
b1011100 0
b1011100 b
b1011100 /
b1011100 _
b1011100 `
b1011100 e
#152
0#
#156
1#
#157
b1011100 !
b1011100 <
b1011100 ^
#158
b1100000 0
b1100000 b
b1100000 /
b1100000 _
b1100000 `
b1100000 e
#160
0#
#164
1#
#165
b1100000 !
b1100000 <
b1100000 ^
#166
b1100100 0
b1100100 b
b1100100 /
b1100100 _
b1100100 `
b1100100 e
#168
0#
#172
1#
#173
b1100100 !
b1100100 <
b1100100 ^
#174
b1101000 0
b1101000 b
b1101000 /
b1101000 _
b1101000 `
b1101000 e
#176
0#
#180
1#
#181
b1101000 !
b1101000 <
b1101000 ^
#182
b1101100 0
b1101100 b
b1101100 /
b1101100 _
b1101100 `
b1101100 e
#184
0#
#188
1#
#189
b1101100 !
b1101100 <
b1101100 ^
#190
b1110000 0
b1110000 b
b1110000 /
b1110000 _
b1110000 `
b1110000 e
#192
0#
#196
1#
#197
b1110000 !
b1110000 <
b1110000 ^
#198
b1110100 0
b1110100 b
b1110100 /
b1110100 _
b1110100 `
b1110100 e
#200
0#
#204
1#
#205
b1110100 !
b1110100 <
b1110100 ^
#206
b1111000 0
b1111000 b
b1111000 /
b1111000 _
b1111000 `
b1111000 e
#208
0#
#212
1#
#213
b1111000 !
b1111000 <
b1111000 ^
#214
b1111100 0
b1111100 b
b1111100 /
b1111100 _
b1111100 `
b1111100 e
#216
0#
#220
1#
#221
b1111100 !
b1111100 <
b1111100 ^
#222
b10000000 0
b10000000 b
b10000000 /
b10000000 _
b10000000 `
b10000000 e
#224
0#
#228
1#
#229
b10000000 !
b10000000 <
b10000000 ^
#230
b10000100 0
b10000100 b
b10000100 /
b10000100 _
b10000100 `
b10000100 e
#232
0#
#236
1#
#237
b10000100 !
b10000100 <
b10000100 ^
#238
b10001000 0
b10001000 b
b10001000 /
b10001000 _
b10001000 `
b10001000 e
#240
0#
#244
1#
#245
b10001000 !
b10001000 <
b10001000 ^
#246
b10001100 0
b10001100 b
b10001100 /
b10001100 _
b10001100 `
b10001100 e
#248
0#
#252
1#
#253
b10001100 !
b10001100 <
b10001100 ^
#254
b10010000 0
b10010000 b
b10010000 /
b10010000 _
b10010000 `
b10010000 e
#256
0#
#260
1#
#261
b10010000 !
b10010000 <
b10010000 ^
#262
b10010100 0
b10010100 b
b10010100 /
b10010100 _
b10010100 `
b10010100 e
#264
0#
#268
1#
#269
b10010100 !
b10010100 <
b10010100 ^
#270
b10011000 0
b10011000 b
b10011000 /
b10011000 _
b10011000 `
b10011000 e
#272
0#
#276
1#
#277
b10011000 !
b10011000 <
b10011000 ^
#278
b10011100 0
b10011100 b
b10011100 /
b10011100 _
b10011100 `
b10011100 e
#280
0#
#284
1#
#285
b10011100 !
b10011100 <
b10011100 ^
#286
b10100000 0
b10100000 b
b10100000 /
b10100000 _
b10100000 `
b10100000 e
#288
0#
#292
1#
#293
b10100000 !
b10100000 <
b10100000 ^
#294
b10100100 0
b10100100 b
b10100100 /
b10100100 _
b10100100 `
b10100100 e
#296
0#
#300
1#
#301
b10100100 !
b10100100 <
b10100100 ^
#302
b10101000 0
b10101000 b
b10101000 /
b10101000 _
b10101000 `
b10101000 e
#304
0#
#308
1#
#309
b10101000 !
b10101000 <
b10101000 ^
#310
b10101100 0
b10101100 b
b10101100 /
b10101100 _
b10101100 `
b10101100 e
#312
0#
#316
1#
#317
b10101100 !
b10101100 <
b10101100 ^
#318
b10110000 0
b10110000 b
b10110000 /
b10110000 _
b10110000 `
b10110000 e
#320
0#
#324
1#
#325
b10110000 !
b10110000 <
b10110000 ^
#326
b10110100 0
b10110100 b
b10110100 /
b10110100 _
b10110100 `
b10110100 e
#328
0#
#332
1#
#333
b10110100 !
b10110100 <
b10110100 ^
#334
b10111000 0
b10111000 b
b10111000 /
b10111000 _
b10111000 `
b10111000 e
#336
0#
#340
1#
#341
b10111000 !
b10111000 <
b10111000 ^
#342
b10111100 0
b10111100 b
b10111100 /
b10111100 _
b10111100 `
b10111100 e
#344
0#
#348
1#
#349
b10111100 !
b10111100 <
b10111100 ^
#350
b11000000 0
b11000000 b
b11000000 /
b11000000 _
b11000000 `
b11000000 e
#352
0#
#356
1#
#357
b11000000 !
b11000000 <
b11000000 ^
#358
b11000100 0
b11000100 b
b11000100 /
b11000100 _
b11000100 `
b11000100 e
#360
0#
#364
1#
#365
b11000100 !
b11000100 <
b11000100 ^
#366
b11001000 0
b11001000 b
b11001000 /
b11001000 _
b11001000 `
b11001000 e
#368
0#
#372
1#
#373
b11001000 !
b11001000 <
b11001000 ^
#374
b11001100 0
b11001100 b
b11001100 /
b11001100 _
b11001100 `
b11001100 e
#376
0#
#380
1#
#381
b11001100 !
b11001100 <
b11001100 ^
#382
b11010000 0
b11010000 b
b11010000 /
b11010000 _
b11010000 `
b11010000 e
#384
0#
#388
1#
#389
b11010000 !
b11010000 <
b11010000 ^
#390
b11010100 0
b11010100 b
b11010100 /
b11010100 _
b11010100 `
b11010100 e
#392
0#
#396
1#
#397
b11010100 !
b11010100 <
b11010100 ^
#398
b11011000 0
b11011000 b
b11011000 /
b11011000 _
b11011000 `
b11011000 e
#400
0#
#404
1#
#405
b11011000 !
b11011000 <
b11011000 ^
#406
b11011100 0
b11011100 b
b11011100 /
b11011100 _
b11011100 `
b11011100 e
#408
0#
#412
1#
#413
b11011100 !
b11011100 <
b11011100 ^
#414
b11100000 0
b11100000 b
b11100000 /
b11100000 _
b11100000 `
b11100000 e
#416
0#
#420
1#
#421
b11100000 !
b11100000 <
b11100000 ^
#422
b11100100 0
b11100100 b
b11100100 /
b11100100 _
b11100100 `
b11100100 e
#424
0#
#428
1#
#429
b11100100 !
b11100100 <
b11100100 ^
#430
b11101000 0
b11101000 b
b11101000 /
b11101000 _
b11101000 `
b11101000 e
#432
0#
#436
1#
#437
b11101000 !
b11101000 <
b11101000 ^
#438
b11101100 0
b11101100 b
b11101100 /
b11101100 _
b11101100 `
b11101100 e
#440
0#
#444
1#
#445
b11101100 !
b11101100 <
b11101100 ^
#446
b11110000 0
b11110000 b
b11110000 /
b11110000 _
b11110000 `
b11110000 e
#448
0#
#452
1#
#453
b11110000 !
b11110000 <
b11110000 ^
#454
b11110100 0
b11110100 b
b11110100 /
b11110100 _
b11110100 `
b11110100 e
#456
0#
#460
1#
#461
b11110100 !
b11110100 <
b11110100 ^
#462
b11111000 0
b11111000 b
b11111000 /
b11111000 _
b11111000 `
b11111000 e
#464
0#
#468
1#
#469
b11111000 !
b11111000 <
b11111000 ^
#470
b11111100 0
b11111100 b
b11111100 /
b11111100 _
b11111100 `
b11111100 e
#472
0#
#476
1#
#477
b11111100 !
b11111100 <
b11111100 ^
#478
b100000000 0
b100000000 b
b100000000 /
b100000000 _
b100000000 `
b100000000 e
#480
0#
#484
1#
#485
b100000000 !
b100000000 <
b100000000 ^
#486
b100000100 0
b100000100 b
b100000100 /
b100000100 _
b100000100 `
b100000100 e
#488
0#
#492
1#
#493
b100000100 !
b100000100 <
b100000100 ^
#494
b100001000 0
b100001000 b
b100001000 /
b100001000 _
b100001000 `
b100001000 e
#496
0#
#500
1#
